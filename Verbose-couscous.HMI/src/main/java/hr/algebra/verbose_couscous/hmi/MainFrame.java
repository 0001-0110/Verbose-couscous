package hr.algebra.verbose_couscous.hmi;

import java.awt.event.ActionEvent;

import javax.swing.JOptionPane;

import hr.algebra.verbose_couscous.bll.services.AuthenticationService;
import hr.algebra.verbose_couscous.bll.services.DataService;
import hr.algebra.verbose_couscous.bll.services.IAuthenticationService;
import hr.algebra.verbose_couscous.bll.services.IDataDownloader;
import hr.algebra.verbose_couscous.bll.services.IDataService;
import hr.algebra.verbose_couscous.bll.services.IMarshaller;
import hr.algebra.verbose_couscous.bll.services.RssParser;
import hr.algebra.verbose_couscous.bll.services.XmlMarshaller;
import hr.algebra.verbose_couscous.dal.repositories.IRepositoryCollection;
import hr.algebra.verbose_couscous.dal.repositories.RepositoryCollection;
import hr.algebra.verbose_couscous.hmi.home.ActorPanel;
import hr.algebra.verbose_couscous.hmi.home.DirectorPanel;
import hr.algebra.verbose_couscous.hmi.home.MoviePanel;
import hr.algebra.verbose_couscous.hmi.login.LoginPanel;
import hr.algebra.verbose_couscous.hmi.login.SignupPanel;

/**
 *
 * @author remi
 */
public class MainFrame extends javax.swing.JFrame {

    private final IAuthenticationService authenticationService;
    private final IDataService dataService;
    private final IMarshaller marshaller;
    private final IDataDownloader dataDownloader;

    public MainFrame() {

        // This sould be in main, but because of the way this class has to be
        // instantiated, I have to put the dependencies here
        IRepositoryCollection repositoryCollection = RepositoryCollection.Instance;
        dataService = new DataService(repositoryCollection);
        authenticationService = new AuthenticationService(dataService);
        marshaller = new XmlMarshaller();
        dataDownloader = new RssParser(dataService);

        initComponents();
        jMenuBar1.setVisible(false);
        jTabbedPane1.add("Log in", new LoginPanel(authenticationService, this::logIn));
        jTabbedPane1.add("Sign up", new SignupPanel(authenticationService, this::logIn));

        logIn();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        MenuItem_XmlImport = new javax.swing.JMenuItem();
        MenuItem_XmlExport = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        MenuItem_ImportData = new javax.swing.JMenuItem();
        MenuItem_ClearData = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1280, 720));

        jMenu1.setText("XML");

        MenuItem_XmlImport.setText("Import XML");
        MenuItem_XmlImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItem_XmlImportActionPerformed(evt);
            }
        });
        jMenu1.add(MenuItem_XmlImport);

        MenuItem_XmlExport.setText("Export XML");
        MenuItem_XmlExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItem_XmlExportActionPerformed(evt);
            }
        });
        jMenu1.add(MenuItem_XmlExport);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Data");

        MenuItem_ImportData.setText("Import data");
        MenuItem_ImportData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItem_ImportDataActionPerformed(evt);
            }
        });
        jMenu2.add(MenuItem_ImportData);

        MenuItem_ClearData.setText("Clear data");
        MenuItem_ClearData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItem_ClearDataActionPerformed(evt);
            }
        });
        jMenu2.add(MenuItem_ClearData);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuItem_XmlImportActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_MenuItem_XmlImportActionPerformed
        return;
    }// GEN-LAST:event_MenuItem_XmlImportActionPerformed

    private void MenuItem_XmlExportActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_MenuItem_XmlExportActionPerformed
        // TODO Get the filename
        //marshaller.exportTo(, dataService.selectAll(Movie.class));
    }// GEN-LAST:event_MenuItem_XmlExportActionPerformed

    private void MenuItem_ImportDataActionPerformed(ActionEvent evt) {// GEN-FIRST:event_MenuItem_ImportDataActionPerformed
        // Open a dialog to get the url to download from
        String[] availableUrls = dataDownloader.getUrls();
        String url = (String) JOptionPane.showInputDialog(this,
                "Select the data source to use:",
                "Import Data", JOptionPane.PLAIN_MESSAGE,
                null,
                availableUrls,
                availableUrls[0]);

        if (url == null || url.length() <= 0) {
            // If you're here, the return value was null/empty.
            return;
        }

        try {
            dataDownloader.downloadData(url);
        } catch (Exception exception) {
            exception.printStackTrace();
            JOptionPane.showMessageDialog(
                    this,
                    "An error occured, tough luck",
                    "Error 418",
                    JOptionPane.ERROR_MESSAGE);
        }

    }// GEN-LAST:event_MenuItem_ImportDataActionPerformed

    private void MenuItem_ClearDataActionPerformed(ActionEvent evt) {// GEN-FIRST:event_MenuItem_ClearDataActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(
                this,
                "Are you sure to clear all data from the database ?",
                "Just to make sure",
                JOptionPane.YES_NO_OPTION);

        if (dialogResult == JOptionPane.NO_OPTION)
            return;
        dataService.clearAll();
    }// GEN-LAST:event_MenuItem_ClearDataActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem MenuItem_ClearData;
    private javax.swing.JMenuItem MenuItem_ImportData;
    private javax.swing.JMenuItem MenuItem_XmlExport;
    private javax.swing.JMenuItem MenuItem_XmlImport;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    private void logIn() {

        // Should never happen, but just in case
        // if (!authenticationService.isAuthenticated())
        // return;

        jTabbedPane1.removeAll();
        jMenuBar1.setVisible(true);
        // jMenuBar1.setVisible(authenticationService.getUser().Permission ==
        // User.UserPermission.Administrator);
        jTabbedPane1.add("Movies", new MoviePanel(dataService));
        jTabbedPane1.add("Actors", new ActorPanel(dataService));
        jTabbedPane1.add("Directors", new DirectorPanel(dataService));
    }
}
